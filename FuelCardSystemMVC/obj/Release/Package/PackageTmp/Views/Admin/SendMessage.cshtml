@{
    ViewBag.Title = "SendMessage";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@model FuelCardSystemEntities.Models.Message
@using FuelCardSystemMVC.Library
@if(_AppContext.HasPermission(Parameters.Can_Send_Message))
{
<script src="~/Scripts/ckeditor/ckeditor.js"></script>
@section header{
    <section class="content-header">
        <h1><i class="fa fa-envelope"></i><span class="margin">Send Message...</span><small></small></h1>
        <ol class="breadcrumb">
            <li><a href="@Url.Action("Index", "Admin")"><i class="fa fa-dashboard"></i>Home</a></li>
            <li><a href="@Url.Action("SentMessages", "Admin")">Sent Messages</a></li>
            <li class="active">Send Message</li>
        </ol>
    </section>
}
<div class="row">
    @if (ViewBag != null)
    {
        if (ViewBag.msg == _AppContext.Messages.Success)
        {
        <div class="col-sm-12">
            <div class="alert alert-success">
                <h4><i class="icon fa fa-check"></i>Successfully Sent.</h4>
            </div>
        </div>
        }
        if (ViewBag.msg == _AppContext.Messages.Error)
        {
        <div class="col-sm-12">
            <div class="alert alert-danger">
                <h4><i class="icon fa fa-ban"></i>Error occurred.</h4>
            </div>
        </div>
        }
    }
    <div class="col-sm-12">
        <div class="box box-solid box-info">
            <div class="box-header with-border">
                <h3 class="box-title">Compose...</h3>
                <div class="box-tools pull-right">
                    <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                </div>@* /.box-tools *@
            </div>@* /.box-header *@
            <div class="overlay" style="display: none">
                <i class="fa fa-refresh fa-spin"></i>
            </div>
            @* form start *@
            @using (Html.BeginForm("SendMessage", "Admin", FormMethod.Post, new { @id = "SendMessageForm", @role = "form" }))
            {
                <div class="box-body">
                    <div class="row">
                    <div class="form-group col-sm-6">
                        <label>Message Type</label>
                        @Html.DropDownListFor(x=>x.message_type,(SelectList)ViewBag.msgtype,new{@class="form-control", @onchange = "javascript:ShowEditer(this.value);"})
                    </div>
                    <div class="form-group col-sm-6">
                        <label>Customer Type</label>
                         @Html.DropDownListFor(x => x.customer_type, new SelectList(_AppContext.CustomerDesig().Select(x => new { value = x.Key, text = x.Value }), "value", "text"), new { @class = "form-control" })
                       @* @Html.DropDownListFor(x=>x.customer_type_id,(SelectList)ViewBag.custtype,new{@class="form-control"})*@
                    </div>

                    </div>
                    <div class="form-group">
                        <label for="">Subject</label>
                        @Html.TextBoxFor(x => x.message_subject, new {@class = "form-control"})
                    </div>
                    <div class="form-group">
                        <label for="">Content</label>
                        @Html.TextAreaFor(x => x.message_body, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Send" class="btn btn-primary col-md-2 col-md-offset-5" onclick="DisableButton(this);" ondblclick="DisableButton(this);">
                    </div>
                    <div class="clearfix"></div>
                </div>@* /.box-body *@
            }
        </div>
    </div>
</div>
@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            if ($("#message_type").val() == 1) {
                ShowEditer(1);
            }
            $("#idSendmessage").closest("li.treeview").addClass("active");
            $("#idSendmessage").closest("li").addClass("active");
            $(".alert").delay(2000).fadeOut(1000);
            SendMessageFormLoad();
        });
        function ShowEditer(v) {
            if (v == "1") {
                CKEDITOR.ProcessHTMLEntities = true;
                CKEDITOR.replace('message_body', {
                    enterMode: CKEDITOR.ENTER_BR,
                    //resize_enabled: true,
                    toolbar: [
                        { name: 'document', items: ['Source', '-', 'NewPage', 'Preview', '-', 'Templates'] }, // Defines toolbar group with name (used to create voice label) and items in 3 subgroups.
                        ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo'], // Defines toolbar group without name.
                        { name: 'basicstyles', groups: ['basicstyles', 'cleanup'], items: ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat'] },
                        //'/', // Line break - next group will be placed in new line.
                        { name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi'], items: ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl', 'Language'] },
                        { name: 'insert', items: ['Image', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe'] },
                        { name: 'styles', items: ['Styles', 'Format', 'Font', 'FontSize'] },
                        { name: 'colors', items: ['TextColor', 'BGColor'] }
                    ]
                });
            }
            else {
                for (name in CKEDITOR.instances) {
                    CKEDITOR.instances[name].destroy(true);
                }
            }
        }
    </script>
}
}
else
{
    <div class="alert alert-danger alert-dismissable">
        <h4><i class="icon fa fa-ban"></i>Unauthorized Access!</h4>
        You have no permission to do this action.    
    </div>
}
