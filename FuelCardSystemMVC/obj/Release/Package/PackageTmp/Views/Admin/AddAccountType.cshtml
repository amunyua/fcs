@{
    ViewBag.Title = "AddAccountType";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    bool flag=false;
}
<link href="~/Content/plugins/datepicker/datepicker3.css" rel="stylesheet" type="text/css" />
@model Tuple<FuelCardSystemEntities.Models.AccountType, List<FuelCardSystemEntities.Models.ActionsTbl>>
@using FuelCardSystemMVC.Library
@if (Model != null)
{
    if (Model.Item1.id > 0 && _AppContext.HasPermission(Parameters.Can_Edit_Account_Type))
    {
        flag = true;
    }
    else if (_AppContext.HasPermission(Parameters.Can_Create_Account_Type))
    {
        flag = true;
    }
}
else if(_AppContext.HasPermission(Parameters.Can_Create_Account_Type))
{
    flag = true;
}
@if (flag==true)
{  
@section header{
    <section class="content-header">
        <h1><i class="fa fa-dollar"></i><span class="margin">@(Model.Item1.id > 0 ? "Edit Account Type..." : "Add Account Type...")</span><small></small></h1>
        <ol class="breadcrumb">
            <li><a href="@Url.Action("Index", "Admin")"><i class="fa fa-dashboard"></i>Home</a></li>
            <li><a href="@Url.Action("AccountTypeList", "Admin")">Account types</a></li>
            <li class="active">@(Model.Item1.id > 0 ? "Edit Account Type" : "Add Account Type")</li>
        </ol>
    </section>
}
<div class="row">
    <div class="col-sm-12">
        <div class="box box-solid box-info">
            <div class="box-header with-border">
                <h3 class="box-title">@(Model.Item1.id > 0 ? "Edit Account Type..." : "Add Account Type...")</h3>
                <div class="box-tools pull-right">
                    <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                </div>@* /.box-tools *@
            </div>@* /.box-header *@
            <div class="overlay" style="display: none">
                <i class="fa fa-refresh fa-spin"></i>
            </div>
            @* form start *@
            @using (Html.BeginForm("AddAccountType", "Admin", FormMethod.Post, new { @id = "AddAccountTypeForm", @role = "form" }))
            {
                <div class="box-body">
                    <div class="form-group">
                        <label for="">Account Type</label>
                        @Html.TextBoxFor(x => x.Item1.AccType, new { @placeholder = "Account Type", @class = "form-control" })
                    </div>
                    <div id="loading" class="" style="position: absolute; top: 85px; display: none;">
                        <i class="fa fa-refresh fa-spin"></i>
                    </div>
                    <div class="form-group">
                        <label for="">Account Description</label>
                        @Html.TextAreaFor(x => x.Item1.AccDescription, new { @placeholder = "Account Description", @class = "form-control" })
                    </div>
                    @if (Model.Item2 != null && Model.Item2.Count() > 0)
                    {
                        
                        <div class="col-sm-12 no-padding">
                            <div class="box box-solid box-info">
                                <div class="box-header">
                                    <h3 class="box-title">Applicable Actions...</h3>
                                </div>
                                <div class="box-body">
                                    <div class="form-group">
                                        <table id="custtypeTbl" class="table table-bordered table-striped">
                                            <thead>
                                                <tr>
                                                    <th style="text-align: center;">
                                                        <input type="checkbox" id="selectAll" /></th>
                                                    <th style="text-align: center">Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var itm in Model.Item2)
                                                {
                                                    <tr>
                                                        <td style="text-align: center;">
                                                            <input type="checkbox" name="chk" value="@itm.id" id="@itm.id" class="check" @(itm.Action_IsSelected == true ? "checked='checked'" : "") />
                                                        </td>
                                                        <td>@itm.Action_Name</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }


                    <div class="form-group">
                        @Html.HiddenFor(x => x.Item1.id)
                        <input type="hidden" name="hdnActionIds" id="hdnActionIds" />
                        <button type="submit" class="btn btn-primary col-md-2 col-md-offset-5" onclick="DisableButton(this);" ondblclick="DisableButton(this);">Save</button>
                    </div>
                    <div class="clearfix"></div>
                </div>@* /.box-body *@
            }
        </div>
    </div>
</div>
@section scripts{
    <script src="~/Content/plugins/datatables/jquery.dataTables.js" type="text/javascript"></script>
    <script src="~/Content/plugins/datatables/dataTables.bootstrap.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            AddAccountTypeFormLoad();
            $("#custtypeTbl").dataTable({
                "aaSorting": [],
                "aoColumnDefs": [{ "bSortable": false, "aTargets": [0] }],
                "iDisplayLength": -1,
                "aLengthMenu": [[20, 40, 60, 80, 100, -1], [20, 40, 60, 80, 100, "All"]]
            });
            // Set 'Select All' to checked if all other boxes are already checked
            $('#selectAll').prop('checked', $('.check').length == $('.check:checked').length);

            // Add click function to 'Select All' to select all other boxes
            var oTable = $("#custtypeTbl").dataTable();
            $('#selectAll').click(function () {
                $('input', oTable.fnGetNodes()).prop('checked', this.checked);
                $("tr").toggleClass("bg-yellow-gradient");
                Populate()
            });

            // Make selectAll checkbox checked if all the other checkboxes checked otherwise make it unchecked
            $('.check').click(function () {
                $('#selectAll').prop('checked', $('.check').length == $('.check:checked').length);
                $(this).closest("tr").toggleClass("bg-yellow-gradient");
            });

            $('input[type="checkbox"]').on('change', function () {
                Populate()
            }).change();

            $("#manageAccount").closest("li.treeview").addClass("active");
            $("#AddAccountType").closest("li").addClass("active");
        });
        function Populate() {
            var oTable = $("#custtypeTbl").dataTable();
            vals = $("input:checked", oTable.fnGetNodes()).map(function () {
                $(this).closest("tr").addClass("bg-yellow-gradient");
                return this.value
            }).get().join(',');
            $('#hdnActionIds').val(vals);
        }
    </script>
}
}
else
{
    <div class="alert alert-danger alert-dismissable">
        <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
        <h4><i class="icon fa fa-ban"></i>Unauthorized Access!</h4>
        You have no permission to do this action.    
    </div>
}