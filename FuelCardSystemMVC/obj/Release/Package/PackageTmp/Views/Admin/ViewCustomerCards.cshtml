@{
    ViewBag.Title = "ViewCustomerCards";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@model IEnumerable<FuelCardSystemEntities.Models.Cards>
@using FuelCardSystemMVC.Library

<link href="~/Content/plugins/datatables/dataTables.bootstrap.css" rel="stylesheet" type="text/css" />
@section header{
    <section class="content-header">
        <h1><i class="fa fa-credit-card"></i><span class="margin">Cards - @(TempData["customer"] != null ? TempData["customer"] : "...")</span><small></small></h1>
        <ol class="breadcrumb">
            <li><a href="@Url.Action("Index", "Admin")"><i class="fa fa-dashboard"></i>Home</a></li>
            <li><a href="@Url.Action("CustomersList", "Admin")">Customer List</a></li>
            <li class="active">Cards</li>
        </ol>
    </section>
}
<div class="row">
    @if (ViewBag.msg != null)
    {
        if (ViewBag.msg == _AppContext.Messages.Error)
        {
        <div class="col-sm-12">
            <div class="alert alert-danger">
                <h4><i class="icon fa fa-ban"></i>Error occured.</h4>
            </div>
        </div>
        }
        if (ViewBag.msg == _AppContext.Messages.NotExist)
        {
        <div class="col-sm-12">
            <div class="alert alert-danger">
                <h4><i class="icon fa fa-ban"></i>No Cards Assigned.</h4>
            </div>
        </div>
        }
        else
        {
        <div class="col-sm-12">
            <div class="box box-solid box-info">
                <div class="box-header with-border">
                    <h3 class="box-title">Cards</h3>
                    <div class="box-tools pull-right">
                        <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                    </div>@* /.box-tools *@
                </div>@* /.box-header *@
                <div class="box-body">
                    @if (Model != null && Model.Count() > 0)
                    {
                        <table id="CardsTbl" class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th style="text-align: center">Card Sno</th>
                                    <th style="text-align: center">Card UID</th>
                                    <th style="text-align: center">Card Type</th>
                                    @if (_AppContext.HasPermission(Parameters.Can_UnAssign_AssginCustomerCards))
                                    {
                                        <th style="text-align: center">Is Assigned</th>
                                    }
@*                                    @if (_AppContext.HasPermission(Parameters.Can_Edit_CustomerCards))
                                    {
                                        <th style="text-align: center">Edit</th>
                                    }*@
                                    <th style="text-align: center">View</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var itm in Model)
                                {
                                    <tr>
                                        <td style="text-align: center;">@CryptorEngine.Decrypt(itm.Card_SNO)</td>
                                        <td style="text-align: center;">@CryptorEngine.Decrypt(itm.Card_UID)</td>
                                        <td style="text-align: center;">@Html.ActionLink((itm.Card_Type.Equals(0) ? "Prepaid" : "Postpaid"), "ViewCustomerCards", "Admin", new { id = itm.Card_id, status = "cardtype" }, new { @class = (itm.Card_Type.Equals(0) ? "btn btn-success btn-sm" : "btn btn-info btn-sm") })</td>
                                        @if (_AppContext.HasPermission(Parameters.Can_UnAssign_AssginCustomerCards))
                                        {
                                            <td style="text-align: center;">@Html.ActionLink((itm.Card_IsAssigned == true ? "Assigned" : "Unassigned"), "ViewCustomerCards", "Admin", new { id = itm.Card_id, status = "assign" }, new { @class = (itm.Card_IsAssigned == true ? "btn btn-success btn-sm" : "btn btn-info btn-sm") })</td>
                                        }
@*                                        @if (_AppContext.HasPermission(Parameters.Can_Edit_CustomerCards))
                                        {
                                            <td style="text-align: center;">@Html.ActionLink("Edit", "EditCustomerCard", "Admin", new { id = itm.Card_id }, new { @class = "btn btn-info btn-sm" })</td>
                                        }*@
                                        <td style="text-align: center;">@Html.ActionLink("View", "ViewCustomerCardDetails", "Admin", new { id = itm.Card_id }, new { @class = "btn btn-info btn-sm" })</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    <div class="clearfix"></div>
                </div>@* /.box-body *@
            </div>
        </div>
        }
    }

</div>
@section scripts{
    <script src="~/Content/plugins/datatables/jquery.dataTables.js" type="text/javascript"></script>
    <script src="~/Content/plugins/datatables/dataTables.bootstrap.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#CardsTbl").dataTable({
                "aaSorting": [],
                "aoColumnDefs": [{ "bSortable": false, "aTargets": [0] }],
                //"iDisplayLength": -1,
                "aLengthMenu": [[10, 20, 30, 40, 100, -1], [10, 20, 30, 40, 100, "All"]]
            });
            // Set 'Select All' to checked if all other boxes are already checked
            $('#selectAll').prop('checked', $('.check').length == $('.check:checked').length);

            // Add click function to 'Select All' to select all other boxes
            var oTable = $("#CardsTbl").dataTable();
            $('#selectAll').click(function () {
                $('input', oTable.fnGetNodes()).prop('checked', this.checked);
                $("tr").toggleClass("bg-yellow-gradient");
                Populate()
            });

            // Make selectAll checkbox checked if all the other checkboxes checked otherwise make it unchecked
            $('.check').click(function () {
                $('#selectAll').prop('checked', $('.check').length == $('.check:checked').length);
                $(this).closest("tr").toggleClass("bg-yellow-gradient");
            });

            $('input[type="checkbox"]').on('change', function () {
                Populate()
            }).change();
            AssignCardstoCustomerFormLoad();
            DecimalFormNum();
            //$(".alert").delay(2000).fadeOut(1000);
            $("#manageCustomers").addClass("active");
            $("#idCustList").closest("li").addClass("active");
        });
        function Populate() {
            var oTable = $("#CardsTbl").dataTable();
            vals = $("input:checked", oTable.fnGetNodes()).map(function () {
                $(this).closest("tr").addClass("bg-yellow-gradient");
                return this.value
            }).get().join(',');
            $('#hdnCardId').val(vals);
        }
    </script>
}
